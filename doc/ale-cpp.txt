===============================================================================
ALE C++ Integration                                           *ale-cpp-options*


-------------------------------------------------------------------------------
clang                                                           *ale-cpp-clang*

g:ale_cpp_clang_options                               *g:ale_cpp_clang_options*
                                                      *b:ale_cpp_clang_options*
  Type: |String|
  Default: `'-std=c++14 -Wall'`

  This variable can be changed to modify flags given to clang.


-------------------------------------------------------------------------------
clangtidy                                                   *ale-cpp-clangtidy*

`clang-tidy` will be run only when files are saved to disk, so that
`compile_commands.json` files can be used. It is recommended to use this
linter in combination with `compile_commands.json` files.


g:ale_cpp_clangtidy_checks                         *g:ale_cpp_clangtidy_checks*
                                                   *b:ale_cpp_clangtidy_checks*
  Type: |List|
  Default: `['*']`

  The checks to enable for clang-tidy with the `-checks` argument.

  All options will be joined with commas, and escaped appropriately for
  the shell. The `-checks` flag can be removed entirely by setting this
  option to an empty List.

g:ale_cpp_clangtidy_builddir                     *g:ale_cpp_clangtidy_builddir*
                                                 *b:ale_cpp_clangtidy_builddir*
  Type: |String|
  Default: `''`

  This variable can be changed to give the build directory to clang-tidy.

  Setting this variable to a non-empty string will cause the `-p` argument
  to be passed to `clang-tidy` so it finds `compile_commands.json` files for
  compile command databases.
  Setting this option overrides `ale_cpp_clangtidy_options`, since the
  compilation database contains already all the compiler flags.

g:ale_cpp_clangtidy_builddirnames           *g:ale_cpp_clangtidy_builddirnames*
                                            *b:ale_cpp_clangtidy_builddirnames*
  Type: |List|
  Default: `['build', 'bin']`

  This list gives defaut build directory names to look for when searching for
  `compile_commands.json`. It is overridden by `ale_cpp_clangtidy_builddir` if
  set.

  Setting this variable to a non-empty list will do 3 things :
  - Look for a subfolder with one of the listed names upwards from buffer
    location.
  - Look into all found subfolders for a readable `compile_commands.json`
    directly under the subfolder name.
  - Set `ale_cpp_clangtidy_builddir` to the found subfolder if the json
    is readable.

  The loop stops at the first suitable subfolder (loops first on all the tree
  for the first name - and then in the order of |finddir()| list ; then on
  the tree for the second name etc.)

g:ale_cpp_clangtidy_options                       *g:ale_cpp_clangtidy_options*
                                                  *b:ale_cpp_clangtidy_options*
  Type: |String|
  Default: `''`

  This variable can be changed to modify flags given to clang-tidy.

  Setting this variable to a non-empty string will cause the `--` argument
  to be passed to `clang-tidy`, which will mean that detection of
  `compile_commands.json` files for compile command databases will be
  disabled. Only set this option if you want to control compiler flags
  entirely manually.


-------------------------------------------------------------------------------
cppcheck                                                     *ale-cpp-cppcheck*

g:ale_cpp_cppcheck_options                         *g:ale_cpp_cppcheck_options*
                                                   *b:ale_cpp_cppcheck_options*
  Type: |String|
  Default: `'--enable=style'`

  This variable can be changed to modify flags given to cppcheck.


-------------------------------------------------------------------------------
cpplint                                                       *ale-cpp-cpplint*

g:ale_cpp_cpplint_options                           *g:ale_cpp_cpplint_options*
                                                    *b:ale_cpp_cpplint_options*
  Type: |String|
  Default: `''`

  This variable can be changed to modify flags given to cpplint.


-------------------------------------------------------------------------------
gcc                                                               *ale-cpp-gcc*

g:ale_cpp_gcc_options                                   *g:ale_cpp_gcc_options*
                                                        *b:ale_cpp_gcc_options*
  Type: |String|
  Default: `'-std=c++14 -Wall'`

  This variable can be changed to modify flags given to gcc.


-------------------------------------------------------------------------------
  vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
